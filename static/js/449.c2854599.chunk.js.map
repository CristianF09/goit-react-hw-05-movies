{"version":3,"file":"static/js/449.c2854599.chunk.js","mappings":"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","sources":["components/MovieDetailsPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/api';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie).catch(console.error);\n  }, [movieId]);\n\n  if (!movie) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h2>{movie.title}</h2>\n      <p>{movie.overview}</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return response.ok ? response.json() : Promise.reject('Failed to fetch trending movies');\n};\n\nexport const searchMovies = async (query) => {\n  const response = await fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`);\n  return response.ok ? response.json() : Promise.reject('Failed to search movies');\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return response.ok ? response.json() : Promise.reject('Failed to fetch movie details');\n};\n\nexport const fetchMovieCredits = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.ok ? response.json() : Promise.reject('Failed to fetch movie credits');\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.ok ? response.json() : Promise.reject('Failed to fetch movie reviews');\n};"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","fetchMovieDetails","then","catch","console","error","_jsxs","children","_jsx","title","overview","Link","to","Outlet","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","concat","sent","abrupt","ok","json","stop","searchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2"],"sourceRoot":""}