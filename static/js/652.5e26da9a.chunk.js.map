{"version":3,"file":"static/js/652.5e26da9a.chunk.js","mappings":"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","sources":["components/MovieDetailsPage.jsx","components/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from 'react-router-dom';  \nimport { getMovieDetails } from './api.js'; \n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams(); \n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate(); // Hook to programmatically navigate\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId); \n        setMovie(data); \n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError('Failed to load movie details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!movie) {\n    return <p>No movie details found.</p>;\n  }\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n\n      {movie.poster_path ? (\n        <img \n          src={`http://image.tmdb.org/t/p/w780/${movie.poster_path}`} \n          alt={movie.title} \n        />\n      ) : (\n        <p>No poster available.</p>\n      )}\n\n      <p><strong>Overview:</strong> {movie.overview}</p>\n      <p><strong>Release Date:</strong> {movie.release_date}</p>\n      <p><strong>Rating:</strong> {movie.vote_average}/10</p>\n\n      {/* Navigation Section */}\n      <nav style={{ marginTop: '20px' }}>\n        <Link to=\"cast\">\n          <button style={{ backgroundColor: 'blue', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', cursor: 'pointer', marginRight: '10px' }}>\n            Cast\n          </button>\n        </Link>\n        <Link to=\"reviews\">\n          <button style={{ backgroundColor: 'blue', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', cursor: 'pointer' }}>\n            Reviews\n          </button>\n        </Link>\n      </nav>\n\n      {/* Go Back Button Section */}\n      <div style={{ marginTop: '20px' }}>\n        <button onClick={() => navigate(-1)} style={{ backgroundColor: 'blue', color: 'white', border: 'none', padding: '10px', borderRadius: '5px', cursor: 'pointer' }}>\n          Go Back\n        </button>\n      </div>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\nexport const fetchMovies = async (page = 1) => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["MovieDetailsPage","movieId","useParams","movie","setMovie","useState","loading","setLoading","error","setError","navigate","useNavigate","useEffect","async","data","getMovieDetails","console","fetchMovieDetails","_jsx","children","_jsxs","title","poster_path","src","alt","overview","release_date","vote_average","style","marginTop","Link","to","backgroundColor","color","border","padding","borderRadius","cursor","marginRight","onClick","Outlet","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","fetchMovies","url","arguments","length","undefined","fetch","fetchTrendingMovies","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}