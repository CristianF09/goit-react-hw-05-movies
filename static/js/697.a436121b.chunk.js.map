{"version":3,"file":"static/js/697.a436121b.chunk.js","mappings":"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","sources":["components/MovieItem.jsx","components/MovieList.jsx","components/MoviesPage.jsx","services/api.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`}>\n        {movie.title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;","import React, { useEffect, useState } from 'react';\nimport MovieItem from './MovieItem';\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`https://api.example.com/movies?api_key=${process.env.REACT_APP_API_KEY55aa6ae40b9f98b84693daf1163a8814}`); // Replace with the actual API endpoint\n        const data = await response.json();\n        console.log(data);\n        setMovies(data.results || []); // Ensure results is an array\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      {Array.isArray(movies) && movies.length > 0 ? (\n        movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie} />\n        ))\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../services/api';\nimport MovieList from './MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (query) {\n      searchMovies(query).then(data => setMovies(data.results)).catch(console.error);\n    }\n  }, [query]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchQuery = form.elements.query.value;\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;","import fetch from 'node-fetch';\n\nconst API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["_ref","movie","_jsx","children","Link","to","id","title","MovieList","movies","setMovies","useState","useEffect","async","response","fetch","process","REACT_APP_API_KEY55aa6ae40b9f98b84693daf1163a8814","data","json","console","log","results","error","fetchMovies","Array","isArray","length","map","MovieItem","MoviesPage","searchParams","setSearchParams","useSearchParams","query","get","searchMovies","then","catch","_jsxs","onSubmit","event","preventDefault","searchQuery","currentTarget","elements","value","type","name","defaultValue","API_KEY","BASE_URL","fetchTrendingMovies","url","getMovieDetails","movieId","getMovieCredits","getMovieReviews","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}