{"version":3,"file":"static/js/160.ba9400ec.chunk.js","mappings":"4LACA,SAAgB,cAAgB,4BAA4B,SAAW,uBAAuB,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,wB,aCI/K,MAgDA,EA7CaA,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAkBvC,OAhBAG,EAAAA,EAAAA,YAAU,KACUC,WAChBF,GAAW,GACX,IACE,MAAMG,QAAiBC,EAAAA,EAAAA,IAAgBV,GACvCG,EAAQM,EACV,CAAE,MAAOE,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CAAC,QACCL,GAAW,EACb,GAGFO,EAAW,GACV,CAACb,IAEAK,GACKS,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAIVD,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAOC,SAASH,SAC5Bb,EAAKiB,OAAS,EACbjB,EAAKkB,KAAIC,IACPC,EAAAA,EAAAA,MAAA,MAAmBN,UAAWC,EAAOM,SAASR,SAAA,EAC5CD,EAAAA,EAAAA,KAAA,OACEU,IAAKH,EAAMI,aAAgB,kCAAmBJ,EAAMI,eAjClD,4BAkCFC,IAAKL,EAAMM,QAEbb,EAAAA,EAAAA,KAAA,KAAAC,UAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAASM,EAAMM,UAClBL,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,MAAIM,EAAMO,eANNP,EAAMQ,OAUjBf,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAOa,WAAWf,SAAC,oCAEhC,C,+ECjDT,MAAMgB,EAAU,mCACVC,EAAW,+BAEXC,EAAiBzB,UACrB,IAAK0B,EAASC,GACZ,MAAM,IAAIC,MAAO,UAASF,EAASG,UAAUH,EAASI,cAExD,OAAOJ,EAASK,MAAM,EAIXC,EAAchC,UACzB,MAAMiC,EAAO,GAAET,2BAAkCD,IAC3CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBS,EAAsBnC,UACjC,MAAMiC,EAAO,GAAET,8BAAqCD,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBU,EAAepC,UAC1B,MAAMiC,EAAO,GAAET,0BAAiCD,WAAiBc,IAC3DX,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBY,EAAkBtC,UAC7B,MAAMiC,EAAO,GAAET,WAAkBhC,aAAmB+B,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBxB,EAAkBF,UAC7B,MAAMiC,EAAO,GAAET,WAAkBhC,qBAA2B+B,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBa,EAAkBvC,UAC7B,MAAMiC,EAAO,GAAET,WAAkBhC,qBAA2B+B,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast.module.css?f72c","components/Cast.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__ZQNq1\",\"castList\":\"Cast_castList__aP658\",\"castItem\":\"Cast_castItem__Hn3OX\",\"castImage\":\"Cast_castImage__NcSn2\",\"castName\":\"Cast_castName__l95OZ\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from './api'; // Adjust the path as necessary\nimport styles from './Cast.module.css';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\nconst noImage = 'path/to/default/image.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setLoading(true);\n      try {\n        const castData = await getMovieCredits(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error('Failed to fetch cast details:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <ul className={styles.castList}>\n      {cast.length > 0 ? (\n        cast.map(actor => (\n          <li key={actor.id} className={styles.castItem}>\n            <img\n              src={actor.profile_path ? `${IMAGE_BASE_URL}${actor.profile_path}` : noImage}\n              alt={actor.name}\n            />\n            <p><strong>{actor.name}</strong></p>\n            <p>as {actor.character}</p>\n          </li>\n        ))\n      ) : (\n        <p className={styles.noCastInfo}>No cast information available.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Cast;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const fetchMovies = async () => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["Cast","movieId","useParams","cast","setCast","useState","loading","setLoading","useEffect","async","castData","getMovieCredits","error","console","fetchCast","_jsx","children","className","styles","castList","length","map","actor","_jsxs","castItem","src","profile_path","alt","name","character","id","noCastInfo","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","fetchMovies","url","fetch","fetchTrendingMovies","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}