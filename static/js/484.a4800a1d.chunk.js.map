{"version":3,"file":"static/js/484.a4800a1d.chunk.js","mappings":"qMAIA,MA6BA,EA7BgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAQvC,OANAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAKC,GAAQL,EAAWK,EAAKC,WAC7BC,MAAMC,QAAQC,MAAM,GACtB,CAACZ,KAGFa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHZ,EAAQc,OAAS,GAChBD,EAAAA,EAAAA,KAAA,MAAAD,SACGZ,EAAQe,KAAIC,IACXL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAOC,UACZJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,SAOpBN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAED,C,4FC3BV,MAAMQ,EAAU,mCACVC,EAAW,+BAEJC,EAAsBC,UACjC,MAAMC,EAAO,GAAEH,8BAAqCD,IAEpD,aADuBK,IAAMD,IACbE,MAAM,EAGXC,EAAeJ,UAC1B,MAAMC,EAAO,GAAEH,0BAAiCD,WAAiBQ,IAEjE,aADuBH,IAAMD,IACbE,MAAM,EAGXG,EAAkBN,UAC7B,MAAMC,EAAO,GAAEH,WAAkBvB,aAAmBsB,IAEpD,aADuBK,IAAMD,IACbE,MAAM,EAGXI,EAAkBP,UAC7B,MAAMC,EAAO,GAAEH,WAAkBvB,qBAA2BsB,IAE5D,aADuBK,IAAMD,IACbE,MAAM,EAGXtB,EAAkBmB,UAC7B,MAAMC,EAAO,GAAEH,WAAkBvB,qBAA2BsB,IAE5D,aADuBK,IAAMD,IACbE,MAAM,C,gBC7BxB,IAUIK,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIC,MAAM,iCACjB,CAEmBC,GAEnBC,EAAOC,QAAUA,EAAUP,EAAaN,MAGpCM,EAAaN,QAChBa,EAAAA,QAAkBP,EAAaN,MAAMc,KAAKR,IAG3CO,EAAQE,QAAUT,EAAaS,QAC/BF,EAAQG,QAAUV,EAAaU,QAC/BH,EAAQI,SAAWX,EAAaW,Q","sources":["components/Reviews.jsx","services/api.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/api'; // Ensure you're importing the correct function\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId) // Change fetchMovieReviews to getMovieReviews\n      .then(data => setReviews(data.results))\n      .catch(console.error);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import fetch from 'node-fetch';\n\nconst API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","useEffect","getMovieReviews","then","data","results","catch","console","error","_jsxs","children","_jsx","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","async","url","fetch","json","searchMovies","query","getMovieDetails","getMovieCredits","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}