{"version":3,"file":"static/js/697.04189973.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem.module.css?c1ef","components/MovieItem.jsx","components/MovieList.jsx","components/MoviesPage.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__1SEks\",\"movieLink\":\"MovieItem_movieLink__BN7ib\",\"moviePoster\":\"MovieItem_moviePoster__6lBWs\",\"movieTitle\":\"MovieItem_movieTitle__lsmBL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './MovieItem.module.css'; \n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <li className={styles.movieItem}>\n      <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n        {movie.poster_path ? (\n          <img\n            src={`${IMAGE_BASE_URL}${movie.poster_path}`}\n            alt={movie.title}\n            className={styles.moviePoster}\n          />\n        ) : (\n          <img\n            src='path/to/default/image.jpg' // Provide a default image path\n            alt='No Poster Available'\n            className={styles.moviePoster}\n          />\n        )}\n        <h2 className={styles.movieTitle}>{movie.title || 'No Title Available'}</h2>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;","import React, { useEffect, useState } from 'react';\nimport { fetchMovies } from './api'; \nimport MovieItem from './MovieItem'; \n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); \n\n  useEffect(() => {\n    const getMovies = async () => {\n      setLoading(true); \n      try {\n        const moviesData = await fetchMovies();\n        setMovies(moviesData.results || []); \n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false); \n      }\n    };\n\n    getMovies();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>; \n  }\n\n  if (error) {\n    return <p>Error: {error}</p>; \n  }\n\n  return (\n    <div>\n      {Array.isArray(movies) && movies.length > 0 ? (\n        movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie} /> \n        ))\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies, fetchTrendingMovies } from './api.js'; \nimport MovieList from './MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [error, setError] = useState(null); \n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let data;\n        if (query) {\n          data = await searchMovies(query); \n        } else {\n          data = await fetchTrendingMovies(); \n        }\n\n        \n        if (!data || !Array.isArray(data.results)) {\n          throw new Error('Invalid data structure');\n        }\n        \n        setMovies(data.results); \n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setError('Failed to fetch movies. Please try again later.'); \n        setMovies([]); \n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchQuery = form.elements.query.value;\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div>\n      <h1>{query ? 'Search Results' : 'Trending Movies'}</h1>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      \n      {error ? ( \n        <p>{error}</p>\n      ) : (\n        movies.length > 0 ? (\n          <MovieList movies={movies} />\n        ) : (\n          <p>No movies found.</p>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const fetchMovies = async () => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["_ref","movie","_jsx","className","styles","children","_jsxs","Link","to","id","poster_path","src","alt","title","MovieList","movies","setMovies","useState","error","setError","loading","setLoading","useEffect","async","moviesData","fetchMovies","results","err","message","getMovies","Array","isArray","length","map","MovieItem","MoviesPage","searchParams","setSearchParams","useSearchParams","query","get","data","searchMovies","fetchTrendingMovies","Error","console","onSubmit","event","preventDefault","searchQuery","currentTarget","elements","value","type","name","defaultValue","API_KEY","BASE_URL","handleResponse","response","ok","status","statusText","json","url","fetch","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}