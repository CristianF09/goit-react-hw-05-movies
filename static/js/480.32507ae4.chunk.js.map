{"version":3,"file":"static/js/480.32507ae4.chunk.js","mappings":"4LACA,QAA8B,6BAA9B,EAAwE,4BAAxE,EAAmH,8BAAnH,EAAiK,+BAAjK,EAA4M,2BAA5M,EAA+O,uB,aCI/O,MA8CA,EA9CgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAqBC,EAAAA,EAAAA,IAAgBZ,GAC3CG,EAAWQ,EAAaE,SAAW,GACrC,CAAE,MAAOC,GACPN,EAAS,oDACTO,QAAQR,MAAM,0BAA2BO,EAC3C,CAAC,QACCR,GAAW,EACb,GAGFU,EAAc,GACb,CAAChB,IAEAK,GACKY,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAGRX,GACKU,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAaF,SAAEX,IAGjB,IAAnBL,EAAQmB,QACHJ,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAiBF,SAAC,0CAIzCD,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAmBF,SAC/BhB,EAAQoB,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAoBL,UAAWC,EAAkBF,SAAA,EAC/CM,EAAAA,EAAAA,MAAA,MAAIL,UAAWC,EAAoBF,SAAA,CAAC,WAASK,EAAOE,WACpDR,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAqBF,SAAEK,EAAOG,YAFrCH,EAAOI,OAKf,C,+EC/CT,MAAMC,EAAU,mCACVC,EAAW,+BAEXC,EAAiBpB,UACrB,IAAKqB,EAASC,GACZ,MAAM,IAAIC,MAAO,UAASF,EAASG,UAAUH,EAASI,cAExD,OAAOJ,EAASK,MAAM,EAGXC,EAAc3B,iBACzB,MAAM4B,EAAO,GAAET,2BAAkCD,UADbW,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEjCR,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EACxB,EAEaW,EAAsBhC,iBACjC,MAAM4B,EAAO,GAAET,8BAAqCD,UADRW,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEzCR,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EACxB,EAEaY,EAAejC,eAAOkC,GACjC,MAAMN,EAAO,GAAET,0BAAiCD,WAAiBgB,UADrBL,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEzCR,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EACxB,EAEac,EAAkBnC,UAC7B,MAAM4B,EAAO,GAAET,WAAkB7B,aAAmB4B,IAC9CG,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EAAS,EAGpBe,EAAkBpC,UAC7B,MAAM4B,EAAO,GAAET,WAAkB7B,qBAA2B4B,IACtDG,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EAAS,EAGpBnB,EAAkBF,eAAOV,GACpC,MAAMsC,EAAO,GAAET,WAAkB7B,qBAA2B4B,UADXW,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAE9CR,QAAiBU,MAAMH,GAC7B,OAAOR,EAAeC,EACxB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews.module.css?0159","components/Reviews.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__AH-Wg\",\"reviewItem\":\"Reviews_reviewItem__Zf9-V\",\"reviewAuthor\":\"Reviews_reviewAuthor__ToQNp\",\"reviewContent\":\"Reviews_reviewContent__5Gwrr\",\"noReviews\":\"Reviews_noReviews__AfjE3\",\"error\":\"Reviews_error__C9I9B\",\"loading\":\"Reviews_loading__r1+JG\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from './api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams(); \n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId); \n        setReviews(movieReviews.results || []); \n      } catch (err) {\n        setError('Failed to fetch reviews. Please try again later.');\n        console.error('Error fetching reviews:', err);\n      } finally {\n        setLoading(false); \n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading reviews...</p>; \n  }\n\n  if (error) {\n    return <div className={styles.error}>{error}</div>; \n  }\n\n  if (reviews.length === 0) {\n    return <div className={styles.noReviews}>No reviews available for this movie.</div>; \n  }\n\n  return (\n    <ul className={styles.reviewsList}>\n      {reviews.map(review => (\n        <li key={review.id} className={styles.reviewItem}>\n          <h3 className={styles.reviewAuthor}>Author: {review.author}</h3>\n          <p className={styles.reviewContent}>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\nexport const fetchMovies = async (page = 1) => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","loading","setLoading","error","setError","useEffect","async","movieReviews","getMovieReviews","results","err","console","fetchReviews","_jsx","children","className","styles","length","map","review","_jsxs","author","content","id","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","fetchMovies","url","arguments","undefined","fetch","fetchTrendingMovies","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}