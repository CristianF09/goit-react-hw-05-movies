{"version":3,"file":"static/js/551.66ab5a9b.chunk.js","mappings":"qMAIA,MAoCA,EApCiBA,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAfAK,EAAAA,EAAAA,YAAU,KACwBC,WAC9B,IACE,MAAMC,QAAaC,EAAAA,EAAAA,MACnBT,EAAUQ,EAAKE,QACjB,CAAE,MAAOC,GACPN,EAAS,kDACX,CAAC,QACCF,GAAW,EACb,GAGFS,EAAyB,GACxB,IAECV,GACKW,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eAGTV,GACKS,EAAAA,EAAAA,KAAA,KAAAC,SAAIV,KAIXW,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qBACJD,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACjB,OAAQA,MACf,C,+DCnCV,QAA4B,6BAA5B,EAAqE,6BAArE,EAAgH,+BAAhH,EAA4J,8B,aCG5J,MAyBA,EAvBkBkB,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,OACEJ,EAAAA,EAAAA,KAAA,MAAIM,UAAWC,EAAiBN,UAC9BC,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAK,WAAUJ,EAAMK,KAAMJ,UAAWC,EAAiBN,SAAA,CAC1DI,EAAMM,aACLX,EAAAA,EAAAA,KAAA,OACEY,IAAM,kCAAmBP,EAAMM,cAC/BE,IAAKR,EAAMS,MACXR,UAAWC,KAGbP,EAAAA,EAAAA,KAAA,OACEY,IAAI,4BACJC,IAAI,sBACJP,UAAWC,KAGfP,EAAAA,EAAAA,KAAA,MAAIM,UAAWC,EAAkBN,SAAEI,EAAMS,OAAS,2BAEjD,ECqBT,EA1CkBX,KAChB,MAAOjB,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAkBvC,OAhBAK,EAAAA,EAAAA,YAAU,KACUC,WAChBJ,GAAW,GACX,IACE,MAAMyB,QAAmBC,EAAAA,EAAAA,MACzB7B,EAAU4B,EAAWlB,SAAW,GAClC,CAAE,MAAOC,GACPN,EAASM,EAAImB,QACf,CAAC,QACC3B,GAAW,EACb,GAGF4B,EAAW,GACV,IAEC7B,GACKW,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGRV,GACKW,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQV,MAIlBS,EAAAA,EAAAA,KAAA,OAAAC,SACGkB,MAAMC,QAAQlC,IAAWA,EAAOmC,OAAS,EACxCnC,EAAOoC,KAAIjB,IACTL,EAAAA,EAAAA,KAACuB,EAAS,CAAgBlB,MAAOA,GAAjBA,EAAMK,OAGxBV,EAAAA,EAAAA,KAAA,KAAAC,SAAG,sBAED,C,+EC1CV,MAAMuB,EAAU,mCACVC,EAAW,+BAEXC,EAAiBhC,UACrB,IAAKiC,EAASC,GACZ,MAAM,IAAIC,MAAO,UAASF,EAASG,UAAUH,EAASI,cAExD,OAAOJ,EAASK,MAAM,EAIXhB,EAActB,UACzB,MAAMuC,EAAO,GAAER,2BAAkCD,IAC3CG,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,EAIpB/B,EAAsBF,UACjC,MAAMuC,EAAO,GAAER,8BAAqCD,IAC9CG,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,EAIpBQ,EAAezC,UAC1B,MAAMuC,EAAO,GAAER,0BAAiCD,WAAiBY,IAC3DT,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,EAIpBU,EAAkB3C,UAC7B,MAAMuC,EAAO,GAAER,WAAkBa,aAAmBd,IAC9CG,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,EAIpBY,EAAkB7C,UAC7B,MAAMuC,EAAO,GAAER,WAAkBa,qBAA2Bd,IACtDG,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,EAIpBa,EAAkB9C,UAC7B,MAAMuC,EAAO,GAAER,WAAkBa,qBAA2Bd,IACtDG,QAAiBO,MAAMD,GAC7B,OAAOP,EAAeC,EAAS,C","sources":["components/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieItem.module.css?c1ef","components/MovieItem.jsx","components/MovieList.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from './api.js'; \nimport MovieList from './MovieList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMoviesData = async () => {\n      try {\n        const data = await fetchTrendingMovies(); \n        setMovies(data.results); \n      } catch (err) {\n        setError('Failed to fetch movies. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrendingMoviesData(); \n  }, []);\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <h1>Trending Movies</h1>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__1SEks\",\"movieLink\":\"MovieItem_movieLink__BN7ib\",\"moviePoster\":\"MovieItem_moviePoster__6lBWs\",\"movieTitle\":\"MovieItem_movieTitle__lsmBL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './MovieItem.module.css'; \n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <li className={styles.movieItem}>\n      <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n        {movie.poster_path ? (\n          <img\n            src={`${IMAGE_BASE_URL}${movie.poster_path}`}\n            alt={movie.title}\n            className={styles.moviePoster}\n          />\n        ) : (\n          <img\n            src='path/to/default/image.jpg' // Provide a default image path\n            alt='No Poster Available'\n            className={styles.moviePoster}\n          />\n        )}\n        <h2 className={styles.movieTitle}>{movie.title || 'No Title Available'}</h2>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;","import React, { useEffect, useState } from 'react';\nimport { fetchMovies } from './api'; \nimport MovieItem from './MovieItem'; \n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); \n\n  useEffect(() => {\n    const getMovies = async () => {\n      setLoading(true); \n      try {\n        const moviesData = await fetchMovies();\n        setMovies(moviesData.results || []); \n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false); \n      }\n    };\n\n    getMovies();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>; \n  }\n\n  if (error) {\n    return <p>Error: {error}</p>; \n  }\n\n  return (\n    <div>\n      {Array.isArray(movies) && movies.length > 0 ? (\n        movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie} /> \n        ))\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const fetchMovies = async () => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["HomePage","movies","setMovies","useState","loading","setLoading","error","setError","useEffect","async","data","fetchTrendingMovies","results","err","fetchTrendingMoviesData","_jsx","children","_jsxs","MovieList","_ref","movie","className","styles","Link","to","id","poster_path","src","alt","title","moviesData","fetchMovies","message","getMovies","Array","isArray","length","map","MovieItem","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","url","fetch","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}