{"version":3,"file":"static/js/480.4936aea8.chunk.js","mappings":"4LACA,QAA8B,6BAA9B,EAAwE,4BAAxE,EAAmH,8BAAnH,EAAiK,+BAAjK,EAA4M,2BAA5M,EAA+O,uB,aCI/O,MAuCA,EAvCgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAgBnC,OAdAG,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAqBC,EAAAA,EAAAA,IAAgBV,GAC3CG,EAAWM,EACb,CAAE,MAAOE,GACPC,QAAQP,MAAMM,GACdL,EAAS,kEACX,GAGFO,EAAc,GACb,CAACb,IAEAK,GACKS,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEZ,IAGjB,IAAnBH,EAAQgB,QACHJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,SAAC,0CAIzCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAmBC,SAC/Bf,EAAQiB,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAoBN,UAAWC,EAAkBC,SAAA,EAC/CI,EAAAA,EAAAA,MAAA,MAAIN,UAAWC,EAAoBC,SAAA,CAAC,WAASG,EAAOE,WACpDR,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAqBC,SAAEG,EAAOG,YAFrCH,EAAOI,OAKf,C,+ECxCT,MAAMC,EAAU,mCACVC,EAAW,+BAEXC,EAAiBnB,UACrB,IAAKoB,EAASC,GACZ,MAAM,IAAIC,MAAO,UAASF,EAASG,UAAUH,EAASI,cAExD,OAAOJ,EAASK,MAAM,EAIXC,EAAc1B,UACzB,MAAM2B,EAAO,GAAET,2BAAkCD,IAC3CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBS,EAAsB7B,UACjC,MAAM2B,EAAO,GAAET,8BAAqCD,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBU,EAAe9B,UAC1B,MAAM2B,EAAO,GAAET,0BAAiCD,WAAiBc,IAC3DX,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBY,EAAkBhC,UAC7B,MAAM2B,EAAO,GAAET,WAAkB1B,aAAmByB,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBa,EAAkBjC,UAC7B,MAAM2B,EAAO,GAAET,WAAkB1B,qBAA2ByB,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBlB,EAAkBF,UAC7B,MAAM2B,EAAO,GAAET,WAAkB1B,qBAA2ByB,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews.module.css?0159","components/Reviews.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__AH-Wg\",\"reviewItem\":\"Reviews_reviewItem__Zf9-V\",\"reviewAuthor\":\"Reviews_reviewAuthor__ToQNp\",\"reviewContent\":\"Reviews_reviewContent__5Gwrr\",\"noReviews\":\"Reviews_noReviews__AfjE3\",\"error\":\"Reviews_error__C9I9B\",\"loading\":\"Reviews_loading__r1+JG\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from './api'; // Adjust the path as necessary\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n        setReviews(movieReviews);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch reviews. Please check your internet connection.\");\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <div className={styles.error}>{error}</div>;\n  }\n\n  if (reviews.length === 0) {\n    return <div className={styles.noReviews}>No reviews available for this movie.</div>;\n  }\n\n  return (\n    <ul className={styles.reviewsList}>\n      {reviews.map(review => (\n        <li key={review.id} className={styles.reviewItem}>\n          <h3 className={styles.reviewAuthor}>Author: {review.author}</h3>\n          <p className={styles.reviewContent}>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const fetchMovies = async () => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","error","setError","useEffect","async","movieReviews","getMovieReviews","err","console","fetchReviews","_jsx","className","styles","children","length","map","review","_jsxs","author","content","id","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","fetchMovies","url","fetch","fetchTrendingMovies","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}