{"version":3,"file":"static/js/652.aeadf2e3.chunk.js","mappings":"qMAIA,MA8CA,EA9CyBA,KACvB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACkBC,WACxB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAgBZ,GACnCG,EAASQ,EACX,CAAE,MAAOJ,GACPM,QAAQN,MAAM,gCAAiCA,GAC/CC,EAAS,wDACX,CAAC,QACCF,GAAW,EACb,GAGFQ,EAAmB,GAClB,CAACd,IAEAK,GACKU,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eAGTT,GACKQ,EAAAA,EAAAA,KAAA,KAAAC,SAAIT,IAGRL,GAKHe,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKd,EAAMgB,SACXH,EAAAA,EAAAA,KAAA,OAAKI,IAAKjB,EAAMkB,YAAaC,IAAKnB,EAAMgB,SACxCD,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,cAAkB,IAAEd,EAAMoB,aACrCL,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,kBAAsB,IAAEd,EAAMqB,iBACzCN,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,YAAgB,IAAEd,EAAMsB,aAAa,aAT3CT,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BAWJ,C,+EC9CV,MAAMS,EAAU,mCACVC,EAAW,+BAEXC,EAAiBjB,UACrB,IAAKkB,EAASC,GACZ,MAAM,IAAIC,MAAO,UAASF,EAASG,UAAUH,EAASI,cAExD,OAAOJ,EAASK,MAAM,EAIXC,EAAcxB,UACzB,MAAMyB,EAAO,GAAET,2BAAkCD,IAC3CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBS,EAAsB3B,UACjC,MAAMyB,EAAO,GAAET,8BAAqCD,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBU,EAAe5B,UAC1B,MAAMyB,EAAO,GAAET,0BAAiCD,WAAiBc,IAC3DX,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBhB,EAAkBF,UAC7B,MAAMyB,EAAO,GAAET,WAAkB1B,aAAmByB,IAC9CG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBY,EAAkB9B,UAC7B,MAAMyB,EAAO,GAAET,WAAkB1B,qBAA2ByB,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,EAIpBa,EAAkB/B,UAC7B,MAAMyB,EAAO,GAAET,WAAkB1B,qBAA2ByB,IACtDG,QAAiBQ,MAAMD,GAC7B,OAAOR,EAAeC,EAAS,C","sources":["components/MovieDetailsPage.jsx","components/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from './api.js'; \n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams(); \n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId); \n        setMovie(data); \n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError('Failed to load movie details. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!movie) {\n    return <p>No movie details found.</p>;\n  }\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <img src={movie.poster_path} alt={movie.title} />\n      <p><strong>Overview:</strong> {movie.overview}</p>\n      <p><strong>Release Date:</strong> {movie.release_date}</p>\n      <p><strong>Rating:</strong> {movie.vote_average}/10</p>\n      {}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;","const API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const fetchMovies = async () => {\n  const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return handleResponse(response);\n};"],"names":["MovieDetailsPage","movieId","useParams","movie","setMovie","useState","loading","setLoading","error","setError","useEffect","async","data","getMovieDetails","console","fetchMovieDetails","_jsx","children","_jsxs","title","src","poster_path","alt","overview","release_date","vote_average","API_KEY","BASE_URL","handleResponse","response","ok","Error","status","statusText","json","fetchMovies","url","fetch","fetchTrendingMovies","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}