{"version":3,"file":"static/js/551.332df825.chunk.js","mappings":"qMAIA,MAoBA,EApBiBA,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAWrC,OATAC,EAAAA,EAAAA,YAAU,KACYC,WAClB,MAAMC,QAAaC,EAAAA,EAAAA,MACnBL,EAAUI,EAAKE,QAAQ,EAGzBC,EAAa,GACZ,KAGDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACZ,OAAQA,MACf,C,+DCjBV,MAUA,EAVkBa,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,OACEF,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAK,WAAUF,EAAMG,KAAKP,SAC7BI,EAAMI,SAEN,ECyBT,EA/BkBN,KAChB,MAAOZ,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAiBrC,OAfAC,EAAAA,EAAAA,YAAU,KACYC,WAClB,IACE,MAAMe,QAAiBC,MAAO,0CAAyCC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,qDAC7EjB,QAAac,EAASI,OAC5BC,QAAQC,IAAIpB,GACZJ,EAAUI,EAAKE,SAAW,GAC5B,CAAE,MAAOmB,GACPF,QAAQE,MAAM,yBAA0BA,EAC1C,GAGFlB,EAAa,GACZ,KAGDG,EAAAA,EAAAA,KAAA,OAAAD,SACGiB,MAAMC,QAAQ5B,IAAWA,EAAO6B,OAAS,EACxC7B,EAAO8B,KAAIhB,IACTH,EAAAA,EAAAA,KAACoB,EAAS,CAAgBjB,MAAOA,GAAjBA,EAAMG,OAGxBN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAED,C,4FC5BV,MAAMsB,EAAU,mCACVC,EAAW,+BAEJ3B,EAAsBF,UACjC,MAAM8B,EAAO,GAAED,8BAAqCD,IAEpD,aADuBZ,IAAMc,IACbX,MAAM,EAGXY,EAAe/B,UAC1B,MAAM8B,EAAO,GAAED,0BAAiCD,WAAiBI,IAEjE,aADuBhB,IAAMc,IACbX,MAAM,EAGXc,EAAkBjC,UAC7B,MAAM8B,EAAO,GAAED,WAAkBK,aAAmBN,IAEpD,aADuBZ,IAAMc,IACbX,MAAM,EAGXgB,EAAkBnC,UAC7B,MAAM8B,EAAO,GAAED,WAAkBK,qBAA2BN,IAE5D,aADuBZ,IAAMc,IACbX,MAAM,EAGXiB,EAAkBpC,UAC7B,MAAM8B,EAAO,GAAED,WAAkBK,qBAA2BN,IAE5D,aADuBZ,IAAMc,IACbX,MAAM,C,gBC7BxB,IAUIkB,EAVY,WAIf,GAAoB,qBAATC,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXC,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXC,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAIC,MAAM,iCACjB,CAEmBC,GAEnBC,EAAOC,QAAUA,EAAUP,EAAarB,MAGpCqB,EAAarB,QAChB4B,EAAAA,QAAkBP,EAAarB,MAAM6B,KAAKR,IAG3CO,EAAQE,QAAUT,EAAaS,QAC/BF,EAAQG,QAAUV,EAAaU,QAC/BH,EAAQI,SAAWX,EAAaW,Q","sources":["components/HomePage.jsx","components/MovieItem.jsx","components/MovieList.jsx","services/api.js","../node_modules/node-fetch/browser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from '../services/api';\nimport MovieList from './MovieList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await fetchTrendingMovies();\n      setMovies(data.results);\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Movies</h1>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ movie }) => {\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`}>\n        {movie.title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;","import React, { useEffect, useState } from 'react';\nimport MovieItem from './MovieItem';\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`https://api.example.com/movies?api_key=${process.env.REACT_APP_API_KEY55aa6ae40b9f98b84693daf1163a8814}`); // Replace with the actual API endpoint\n        const data = await response.json();\n        console.log(data);\n        setMovies(data.results || []); // Ensure results is an array\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      {Array.isArray(movies) && movies.length > 0 ? (\n        movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie} />\n        ))\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;","import fetch from 'node-fetch';\n\nconst API_KEY = '55aa6ae40b9f98b84693daf1163a8814';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const searchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  return response.json();\n};","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"names":["HomePage","movies","setMovies","useState","useEffect","async","data","fetchTrendingMovies","results","fetchMovies","_jsxs","children","_jsx","MovieList","_ref","movie","Link","to","id","title","response","fetch","process","REACT_APP_API_KEY55aa6ae40b9f98b84693daf1163a8814","json","console","log","error","Array","isArray","length","map","MovieItem","API_KEY","BASE_URL","url","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"sourceRoot":""}